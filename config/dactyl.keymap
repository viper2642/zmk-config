#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
//#include "mouse.dtsi"  // finicky and not worth it, turning off

#define DEFAULT 0
#define L_NUM 1
#define L_NAV 2
#define L_SYS 3
//#define L_MOU 4

//#define P_LMOU_X &hll L_MOU X  // this would be a home-mod row thing for x

&caps_word {
  continue-list = <UNDERSCORE MINUS BSPC>;
};

/ {
  
     behaviors {

       /*  hll: home_row_layer_mod_left { */
       /*      compatible = "zmk,behavior-hold-tap"; */
       /*      #binding-cells = <2>; */
       /*      flavor = "balanced"; */
       /*      tapping-term-ms = <200>; */
       /*      quick-tap-ms = <175>; */
       /*      bindings = <&mo>, <&kp>; */
       /*      hold-trigger-key-positions = <6 7 8 9 10 11>; */
       /*      hold-trigger-on-release; */
       /* }; */
        
        tdlrctrl: tap_dance_leftrightcontrol {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LCTRL>, <&kp LC(RCTRL)>;
      };

        motg_nav: momentary_or_toggle_layer_nav {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
	    tapping-term-ms = <200>;
	    bindings = <&mo L_NAV>, <&tog L_NAV>;
       };
       
     motg_num: momentary_or_toggle_layer_num {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
	    tapping-term-ms = <200>;
	    bindings = <&mo L_NUM>, <&tog L_NUM>;
      };
    };

    combos {
      compatible = "zmk,combos";
      
      // Turn on CAPSWORD when pressing both shift keys together.
      combo_capsword {
	timeout-ms = <75>;
	key-positions =<24 47>;
	bindings = <&caps_word>;
      };

      combo_esc {
            timeout-ms = <75>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer { // LAYER 0
	  display-name = "QWERTY";
	  bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4    &kp N5                          &kp N6     &kp N7     &kp N8     &kp N9     &kp N0    &kp BSLH
&kp TAB    &kp Q   &kp W     &kp E     &kp R     &kp T                           &kp Y      &kp U      &kp I      &kp O      &kp P     &kp MINUS
&kp LSHIFT &kp A   &kp S     &kp D     &kp F     &kp G                           &kp H      &kp J      &kp K      &kp L      &kp SEMI  &kp SQT
&tdlrctrl  &kp Z   &kp X     &kp C     &kp V     &kp B                           &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH  &kp RSHIFT
                   &kp LBKT  &kp RBKT                                                                  &kp PLUS   &kp EQUAL
                                       &kp LGUI  &kp BSPC                        &kp SPACE  &kp ENTER
                                                 &kp LALT  &motg_num  &motg_nav  &kp DEL
                                                 &kp HOME  &kp END    &kp PG_UP  &kp PG_DN
            >;
        };

        num_layer { // layer 1
	  display-name = "NUM";
	  bindings = <
&kp F12  &kp F1       &kp F2    &kp F3    &kp F4     &kp F5                      &kp F6    &kp F7    &kp F8    &kp F9     &kp F10   &kp F11
&trans   &kp FSLH     &kp N7    &kp N8    &kp N9     &kp MINUS                   &kp LBKT  &kp LT    &kp EQUAL &kp GT     &kp RBKT  &kp UNDERSCORE
&trans   &kp STAR     &kp N4    &kp N5    &kp N6     &kp PLUS                    &kp LBRC  &kp LPAR  &kp COLON &kp RPAR   &kp RBRC  &kp PIPE
&trans   &kp CLEAR    &kp N1    &kp N2    &kp N3     &kp ENTER                   &kp EXCL  &kp AT    &kp HASH  &kp CARET  &kp DLLR  &kp AMPS
                      &kp N0    &kp DOT                                                              &kp GRAVE &kp QMARK
                                          &trans     &trans                      &trans  &trans
                                                     &trans  &trans   &mo L_SYS  &trans
                                                     &trans  &trans   &trans     &trans
            >;
        };

	nav_layer { // layer 2
	  display-name="NAV";
            bindings = <
&trans  &trans  &trans     &trans      &trans        &trans                     &trans         &kp K_MUTE  &kp K_VOL_DN  &kp K_VOL_UP  &trans         &trans
&trans  &trans  &trans     &trans      &trans        &trans                     &trans         &kp BSPC    &kp UP        &kp DELETE    &kp INS        &kp C_BRI_UP
&trans  &trans  &trans     &trans      &trans        &trans                     &kp HOME       &kp LEFT    &kp DOWN      &kp RIGHT     &kp END        &kp C_BRI_DN
&trans  &trans  &trans     &trans      &trans        &trans                     &kp LS(ENTER)  &kp PG_UP   &kp PG_DN     &trans        &trans         &trans
                &trans     &trans                                                                          &trans        &trans
                                       &trans        &trans                     &trans         &trans
                                                     &trans  &mo L_SYS  &trans  &trans
                                                     &trans  &trans     &trans  &trans
            >;
        };

        sys_layer { // layer 3
	  display-name="SYS";
            bindings = <
&none  &bt BT_SEL 0  &out OUT_BLE  &none  &none       &none                      &none        &none       &none  &none  &none  &none
&none  &bt BT_SEL 1  &out OUT_USB  &none  &sys_reset  &none                      &none        &sys_reset  &none  &none  &none  &none
&none  &bt BT_SEL 2  &none         &none  &none       &none                      &none        &none       &none  &none  &none  &none
&none  &bt BT_SEL 3  &bt BT_CLR    &none  &none       &bootloader                &bootloader  &none       &none  &none  &none  &none
                     &none         &none                                                                  &none  &none
                                          &none       &none                      &none        &none
                                                      &none        &none  &none  &none
                                                      &none        &none  &none  &none
            >;
        };

/* 	mouse_layer { // layer 4 */
/* 	  display-name="MOUSE"; */
/*             bindings = < */
/* &trans  &trans  &trans     &trans      &trans        &trans                     &trans         &trans      &trans      &trans      &trans      &trans */
/* &trans  &trans  &trans     &trans      &trans        &trans                     &trans         U_WH_U      U_MS_U      U_WH_D      &trans      &trans */
/* &trans  &trans  &trans     &trans      &trans        &trans                     U_WH_L         U_MS_L      U_MS_D      U_MS_R      U_WH_R      &trans */
/* &trans  &trans  &trans     &trans      &trans        &trans                     &trans         &mkp LCLK   &mkp MCLK   &mkp RCLK   &trans      &trans */
/*                 &trans     &trans                                                                          &trans      &trans */
/*                                        &trans        &trans                     &trans         &trans */
/*                                                      &trans  &trans     &trans  &trans */
/*                                                      &trans  &trans     &trans  &trans */
/*             >; */
/*         }; */
    };
};

